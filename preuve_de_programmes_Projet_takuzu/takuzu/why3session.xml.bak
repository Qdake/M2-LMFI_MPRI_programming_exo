<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Coq" version="8.11.0" timelimit="0" steplimit="0" memlimit="0"/>
<prover id="3" name="Alt-Ergo" version="2.0.0" timelimit="20" steplimit="0" memlimit="1000"/>
<prover id="4" name="Spass" version="3.7" timelimit="20" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="takuzu.mlw"/>
<theory name="Appetizers" proved="true">
 <goal name="no_3_consecutive_zeros_version_1&#39;vc" expl="VC for no_3_consecutive_zeros_version_1" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="no_3_consecutive_zeros_version_1&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_1&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_1&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_1&#39;vc.3" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_1&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_1&#39;vc.5" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_1&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_1&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="no_3_consecutive_zeros_version_2&#39;vc" expl="VC for no_3_consecutive_zeros_version_2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="no_3_consecutive_zeros_version_2&#39;vc.0" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_2&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_2&#39;vc.2" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_2&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_2&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_2&#39;vc.5" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_2&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_2&#39;vc.7" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_2&#39;vc.8" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_2&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_2&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_2&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_2&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="no_3_consecutive_zeros_version_3&#39;vc" expl="VC for no_3_consecutive_zeros_version_3" proved="true">
 <proof prover="0"><result status="timeout" time="1.00"/></proof>
 <proof prover="1"><result status="valid" time="0.05"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.8" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.9" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="3" timelimit="60" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" timelimit="60" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.11" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.12" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="timeout" time="1.00"/></proof>
  <proof prover="1"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.21" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.22" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  <proof prover="1" obsolete="true"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="no_3_consecutive_zeros_version_3&#39;vc.32" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="num_occ&#39;vc" expl="VC for num_occ" proved="true">
 <proof prover="0"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="count_number_of&#39;vc" expl="VC for count_number_of" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.05"/></proof>
 <proof prover="3"><result status="valid" time="0.03" steps="67"/></proof>
 </goal>
 <goal name="same_number_of_zeros_and_ones&#39;vc" expl="VC for same_number_of_zeros_and_ones" proved="true">
 <proof prover="0"><result status="valid" time="0.02"/></proof>
 <proof prover="3" timelimit="30" obsolete="true"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="check_identical_sub_arrays&#39;vc" expl="VC for check_identical_sub_arrays" proved="true">
 <proof prover="3"><result status="valid" time="0.02" steps="98"/></proof>
 </goal>
</theory>
<theory name="Takuzu">
 <goal name="eq&#39;vc" expl="VC for eq" proved="true">
 <proof prover="0"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="column_start_index&#39;vc" expl="VC for column_start_index" proved="true">
 <proof prover="0"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="row_start_index&#39;vc" expl="VC for row_start_index" proved="true">
 <proof prover="0"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="valid_chunk" proved="true">
 <proof prover="0"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="acc&#39;vc" expl="VC for acc" proved="true">
 <proof prover="0"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="check_rule_1_for_chunk&#39;vc" expl="VC for check_rule_1_for_chunk" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="check_rule_1_for_chunk&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.12" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.13" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.14" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.15" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.16" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.17" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="60"><result status="valid" time="4.54" steps="3784"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.19" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.30" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.31" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.32" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="60"><result status="valid" time="4.66" steps="3979"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.34" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.35" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.36" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.37" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.38" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.39" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.40" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.44" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.09"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.45" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.46" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.47" expl="loop invariant preservation" proved="true">
  <proof prover="3" timelimit="60"><result status="valid" time="3.52" steps="2791"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.48" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.49" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.50" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.51" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.52" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.53" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.54" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.55" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.56" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.57" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.58" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.59" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.60" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="check_rule_1_for_chunk&#39;vc.61" expl="out of loop bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="num_occ&#39;vc" expl="VC for num_occ" proved="true">
 <proof prover="0"><result status="valid" time="0.05"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="num_occ&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="num_occ&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="num_occ&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="num_occ&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="num_occ&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="num_occ&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="num_occ&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="count_number_of&#39;vc" expl="VC for count_number_of" proved="true">
 <proof prover="0"><result status="valid" time="0.05"/></proof>
 </goal>
 <goal name="check_rule_2_for_chunk&#39;vc" expl="VC for check_rule_2_for_chunk" proved="true">
 <proof prover="0"><result status="valid" time="0.04"/></proof>
 <proof prover="3" obsolete="true"><result status="valid" time="0.01" steps="8"/></proof>
 </goal>
 <goal name="check_identical_chunks&#39;vc" expl="VC for check_identical_chunks" proved="true">
 <proof prover="0"><result status="valid" time="0.10"/></proof>
 <proof prover="3" obsolete="true"><result status="valid" time="0.66" steps="767"/></proof>
 </goal>
 <goal name="check_rule_3_for_column&#39;vc" expl="VC for check_rule_3_for_column" proved="true">
 <proof prover="0"><result status="valid" time="0.05"/></proof>
 </goal>
 <goal name="check_rule_3_for_row&#39;vc" expl="VC for check_rule_3_for_row" proved="true">
 <proof prover="0"><result status="valid" time="0.11"/></proof>
 </goal>
 <goal name="check_at_cell&#39;vc" expl="VC for check_at_cell" proved="true">
 <proof prover="0"><result status="timeout" time="1.00"/></proof>
 <proof prover="1"><result status="valid" time="0.08"/></proof>
 <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.60" steps="548"/></proof>
 </goal>
 <goal name="subst_0">
 <proof prover="1" timelimit="20"><result status="unknown" time="5.14"/></proof>
 </goal>
 <goal name="aux_rule_1_and_rule_2_for_chunk">
 </goal>
 <goal name="sym">
 </goal>
 <goal name="inv_not_identical">
 </goal>
 <goal name="check_cell_change&#39;vc" expl="VC for check_cell_change" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="check_cell_change&#39;vc.0" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="check_cell_change&#39;vc.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.12"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="20.00"/></proof>
  </goal>
  <goal name="check_cell_change&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  </goal>
  <goal name="check_cell_change&#39;vc.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.20"/></proof>
  <proof prover="3"><undone/></proof>
  </goal>
  <goal name="check_cell_change&#39;vc.4" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.19"/></proof>
  <proof prover="1" obsolete="true"><result status="valid" time="0.06"/></proof>
  <proof prover="3"><undone/></proof>
  </goal>
  <goal name="check_cell_change&#39;vc.5" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="3"><undone/></proof>
  </goal>
  <goal name="check_cell_change&#39;vc.6" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.16"/></proof>
  <proof prover="3"><undone/></proof>
  </goal>
  <goal name="check_cell_change&#39;vc.7" expl="assertion" proved="true">
  <proof prover="0"><result status="timeout" time="1.00"/></proof>
  <proof prover="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="3"><undone/></proof>
  <proof prover="4" timelimit="1"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="check_cell_change&#39;vc.7.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.14"/></proof>
   </goal>
   <goal name="check_cell_change&#39;vc.7.1" expl="assertion" proved="true">
   <proof prover="0" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="1" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="3"><result status="valid" time="0.19" steps="217"/></proof>
   <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <transf name="inline_goal" proved="true" >
    <goal name="check_cell_change&#39;vc.7.1.0" expl="assertion" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="check_cell_change&#39;vc.7.1.0.0" expl="assertion" proved="true">
     <proof prover="0"><result status="timeout" time="1.00"/></proof>
     <proof prover="1"><result status="valid" time="0.08"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="check_cell_change&#39;vc.8" expl="assertion" proved="true">
  <proof prover="0"><result status="timeout" time="1.00"/></proof>
  <proof prover="1"><result status="valid" time="0.09"/></proof>
  <proof prover="2" obsolete="true"><path name="takuzu_Takuzu_check_cell_changeqtvc_1.v"/><result status="unknown" time="0.00" steps="0"/></proof>
  <proof prover="3"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="valid" time="2.55"/></proof>
  </goal>
  <goal name="check_cell_change&#39;vc.9" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  <proof prover="3"><undone/></proof>
  </goal>
  <goal name="check_cell_change&#39;vc.10" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="3"><undone/></proof>
  </goal>
  <goal name="check_cell_change&#39;vc.11" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.29"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="3"><undone/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="20.00"/></proof>
  </goal>
  <goal name="check_cell_change&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.13"/></proof>
  <proof prover="3"><undone/></proof>
  </goal>
  <goal name="check_cell_change&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="3"><undone/></proof>
  </goal>
  <goal name="check_cell_change&#39;vc.14" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="subst_inchange">
 </goal>
 <goal name="solve_aux&#39;vc" expl="VC for solve_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="solve_aux&#39;vc.0" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.1" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.03" steps="16"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.5" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.6" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.03" steps="42"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.03" steps="24"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.11" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.13" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.14" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.15" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.16" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.17" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.18" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.19" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="42"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.20" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.04" steps="46"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.21" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.22" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.03" steps="25"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.23" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="26"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.24" expl="exceptional postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.25" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.26" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.27" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.28" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.29" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="4" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.30" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.31" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.32" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.33" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="3" obsolete="true"><result status="valid" time="0.75" steps="462"/></proof>
  <proof prover="4" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="solve_aux&#39;vc.33.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" obsolete="true"><result status="valid" time="0.61" steps="462"/></proof>
   <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="inline_goal" proved="true" >
    <goal name="solve_aux&#39;vc.33.0.0" expl="precondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="solve_aux&#39;vc.33.0.0.0" expl="precondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="4" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="solve_aux&#39;vc.33.0.0.0.0" expl="precondition" proved="true">
      <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="inline_goal" proved="true" >
       <goal name="solve_aux&#39;vc.33.0.0.0.0.0" expl="precondition" proved="true">
       <proof prover="0"><result status="valid" time="0.14"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="solve_aux&#39;vc.34" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.03" steps="25"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.35" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.03" steps="28"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.36" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.11"/></proof>
  <proof prover="1" timelimit="20" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="4" timelimit="1" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.37" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.03" steps="34"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.38" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.10"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.03" steps="34"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.39" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.03" steps="35"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.40" expl="precondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.80" steps="431"/></proof>
  <proof prover="4" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="solve_aux&#39;vc.40.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" obsolete="true"><result status="valid" time="0.59" steps="431"/></proof>
   <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="inline_goal" proved="true" >
    <goal name="solve_aux&#39;vc.40.0.0" expl="precondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="solve_aux&#39;vc.40.0.0.0" expl="precondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="4" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="solve_aux&#39;vc.40.0.0.0.0" expl="precondition" proved="true">
      <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="inline_goal" proved="true" >
       <goal name="solve_aux&#39;vc.40.0.0.0.0.0" expl="precondition" proved="true">
       <proof prover="0"><result status="valid" time="0.14"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="solve_aux&#39;vc.41" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.42" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="42"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.43" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09"/></proof>
  <proof prover="1" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.44" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09"/></proof>
  <proof prover="1" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="3" obsolete="true"><result status="valid" time="2.88" steps="953"/></proof>
  <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.45" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.46" expl="exceptional postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="254"/></proof>
  <proof prover="4" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="solve_aux&#39;vc.46.0" expl="exceptional postcondition" proved="true">
   <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" obsolete="true"><result status="valid" time="0.10" steps="254"/></proof>
   <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="inline_goal" proved="true" >
    <goal name="solve_aux&#39;vc.46.0.0" expl="exceptional postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="solve_aux&#39;vc.46.0.0.0" expl="exceptional postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="4" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="solve_aux&#39;vc.46.0.0.0.0" expl="exceptional postcondition" proved="true">
      <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="inline_goal" proved="true" >
       <goal name="solve_aux&#39;vc.46.0.0.0.0.0" expl="exceptional postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.14"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="solve_aux&#39;vc.46.1" expl="exceptional postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="1" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="solve_aux&#39;vc.46.2" expl="exceptional postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.03"/></proof>
   <proof prover="1" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="solve_aux&#39;vc.47" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="3" timelimit="180" obsolete="true"><result status="valid" time="0.02" steps="30"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.48" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.49" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.50" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.51" expl="exceptional postcondition" proved="true">
  <proof prover="0" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="solve_aux&#39;vc.51.0" expl="exceptional postcondition" proved="true">
   <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" obsolete="true"><result status="valid" time="0.08" steps="150"/></proof>
   <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="inline_goal" proved="true" >
    <goal name="solve_aux&#39;vc.51.0.0" expl="exceptional postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="solve_aux&#39;vc.51.0.0.0" expl="exceptional postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="4" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="solve_aux&#39;vc.51.0.0.0.0" expl="exceptional postcondition" proved="true">
      <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="inline_goal" proved="true" >
       <goal name="solve_aux&#39;vc.51.0.0.0.0.0" expl="exceptional postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.14"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="solve_aux&#39;vc.51.1" expl="exceptional postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   <proof prover="1" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="solve_aux&#39;vc.51.2" expl="exceptional postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="1" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="solve_aux&#39;vc.52" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.53" expl="precondition" proved="true">
  <proof prover="0" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="solve_aux&#39;vc.53.0" expl="precondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06"/></proof>
   <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="20.00"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="20.00"/></proof>
   <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="solve_aux&#39;vc.54" expl="variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.05"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.55" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.56" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.57" expl="precondition" proved="true">
  <proof prover="0" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="3" obsolete="true"><result status="valid" time="2.05" steps="740"/></proof>
  <proof prover="4" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="solve_aux&#39;vc.57.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" obsolete="true"><result status="valid" time="2.49" steps="740"/></proof>
   <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="inline_goal" proved="true" >
    <goal name="solve_aux&#39;vc.57.0.0" expl="precondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="solve_aux&#39;vc.57.0.0.0" expl="precondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="4" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="solve_aux&#39;vc.57.0.0.0.0" expl="precondition" proved="true">
      <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="inline_goal" proved="true" >
       <goal name="solve_aux&#39;vc.57.0.0.0.0.0" expl="precondition" proved="true">
       <proof prover="0"><result status="valid" time="0.14"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="solve_aux&#39;vc.58" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.06"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.59" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.60" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.61" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="3" obsolete="true"><result status="valid" time="2.24" steps="742"/></proof>
  <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.62" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.08"/></proof>
  <proof prover="1" timelimit="20" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.63" expl="exceptional postcondition" proved="true">
  <proof prover="0" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="1" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="3" obsolete="true"><result status="valid" time="0.08" steps="233"/></proof>
  <proof prover="4" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="solve_aux&#39;vc.63.0" expl="exceptional postcondition" proved="true">
   <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <proof prover="3" obsolete="true"><result status="valid" time="0.12" steps="233"/></proof>
   <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
   <transf name="inline_goal" proved="true" >
    <goal name="solve_aux&#39;vc.63.0.0" expl="exceptional postcondition" proved="true">
    <transf name="split_all_full" proved="true" >
     <goal name="solve_aux&#39;vc.63.0.0.0" expl="exceptional postcondition" proved="true">
     <proof prover="0" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <proof prover="4" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
     <transf name="split_vc" proved="true" >
      <goal name="solve_aux&#39;vc.63.0.0.0.0" expl="exceptional postcondition" proved="true">
      <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
      <transf name="inline_goal" proved="true" >
       <goal name="solve_aux&#39;vc.63.0.0.0.0.0" expl="exceptional postcondition" proved="true">
       <proof prover="0"><result status="valid" time="0.11"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="solve_aux&#39;vc.63.1" expl="exceptional postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
   <goal name="solve_aux&#39;vc.63.2" expl="exceptional postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.04"/></proof>
   <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
   <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="solve_aux&#39;vc.64" expl="index in array bounds" proved="true">
  <proof prover="0"><result status="valid" time="0.07"/></proof>
  <proof prover="3" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.65" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.09"/></proof>
  <proof prover="1" timelimit="20" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="4" obsolete="true"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.66" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.12"/></proof>
  <proof prover="1" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
  <goal name="solve_aux&#39;vc.67" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.12"/></proof>
  <proof prover="1" timelimit="20" obsolete="true"><result status="failure" time="0.00"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="20.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="solve&#39;vc" expl="VC for solve" proved="true">
 <proof prover="0"><result status="valid" time="0.07"/></proof>
 </goal>
</theory>
<theory name="Test" proved="true">
 <goal name="empty&#39;vc" expl="VC for empty" proved="true">
 <proof prover="0"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="example1&#39;vc" expl="VC for example1" proved="true">
 <proof prover="0"><result status="valid" time="0.09"/></proof>
 </goal>
 <goal name="example2&#39;vc" expl="VC for example2" proved="true">
 <proof prover="0"><result status="valid" time="0.08"/></proof>
 </goal>
 <goal name="example3&#39;vc" expl="VC for example3" proved="true">
 <proof prover="0"><result status="valid" time="0.07"/></proof>
 </goal>
 <goal name="example4&#39;vc" expl="VC for example4" proved="true">
 <proof prover="0"><result status="valid" time="0.07"/></proof>
 </goal>
 <goal name="example5&#39;vc" expl="VC for example5" proved="true">
 <proof prover="0"><result status="valid" time="0.06"/></proof>
 </goal>
 <goal name="example6&#39;vc" expl="VC for example6" proved="true">
 <proof prover="0"><result status="valid" time="0.08"/></proof>
 </goal>
</theory>
</file>
</why3session>
